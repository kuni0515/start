# day03 20220224

컴퓨터가 숫자를 기억하는 방법

	==>
		정수의 경우
			==> 2진수로 변환하고
				부호 비트는 무조건 0을 붙인다
				
				예]
						10
					2	5	0
					2	2	1
					2	1	0
					2	0	1
					
		음수의 경우
		==> 9의 보수법을 이용해서 처리한다.
		
			1) 양수로 가정하고 2진수로 변환한다.
			2) 보수화 시킨다. (현재 숫자를 바꾼다. 0->1, 1->0)
			3) +1 해준다.
			4) 부호비트에 강제로 1을 지정한다.
			
===================================================

연산자
==> 데이터를 가공하기 위해서 사용되는 기호

	용어
		연산자		- 가공방식을 나타내는 기호
		피연산자	- 가공에 사용되는 데이터
		
		예]
			1+2 ==> + : 연산자, 1과 2는 피연산자
			
		참고]
			연산자를 사용하면 가공된 결과가 나오는데
			이 결과는 항상 큰 형태로 나오는 것을 원칙으로 한다.
			
			예]
				1+3.14 ==> 4.14 이때 결과값의 데이터 형태는 double
				
				int + double ==> double
				
				이때 정수형 데이터는 실수형 데이터로 자동 형변환이 이루어진다.
				
---------------------------------------------------------------------------------------

문제]
		'J' + 3.14 ==> ?
		
		'J' 는 아스키 코드값이 74로 변환이 되서 연산을 하게 된다.
		따라서 
			74+3.14
		의 연산을 하게 되고
		결과값은 double 형 데이터 77.14가 된다.
				
			주의]
				수학에서는 비교연산을 할 때
				3개 항을 동시에 비교할 수 있었지만
				프로그래밍에서는 절대로 3개이상의 피연산자를 동시에 하는 경우는 없다
				
				1 < x < 10 --- 수학에서 사용하는 방식
				==>
				자바에서의 방식
				x > 1 and x < 10
				
---------------------------------------------------------------------
종류
	
	1. 사칙연산
		
		사칙연산자는 피연산자가 반드시 2개 필요하다.
			참고]
				사칙연산자가 여러개 동시에 기술된 경우에는
				왼쪽부터 차례로 계산해서 결과값을 만들어나간다.
				
	
	2. 대입연산자
		변수에 데이터를 기억하도록 하는 연산자.
		항상 오른쪽에서 왼쪽으로 대입되어진다.
		변수 = 변수 + 데이터;
		==>
		
	
	참고]
		문자+문자열은 항상 문자열로 만들어진다.
		
	참고]
		System.out.println(데이터) 에서는 오직 한개만 출력할 수 있다.
		예]
			System.out.println("홍길동","고길동","둘리") 이거 안된다xxx
			
		
	3. 증감연산
		++ : 1증가시켜준다. 
		-- : 1감소시켜준다.
		
		*** ++변수 / 변수++ : 의미가 다르다 먼저하냐 나중에 하냐가 다름
		
		참고]
			모든 연산은 일반적으로 중앙처리장치에서 처리되는 것이 원칙이다.
			증감연산자, 시프트연산자는 중앙처리장치를 거치치 않는다.
			메모리 상에서 연산되서 처리된다.

	4. 부호반전연산자
		- 
	
	5. 비교연산자
		사용되는 데이터와 관계없이 결과는 항상 논리값(true, false)으로 나온다.
		이 연산자는 주로 if, for, while, ... 제어 명령에서 질문이 필요할 때 많이 사용된다.
		
		문자열을 비교할 경우에는 equals()를 사용해서 비교해야
		정확하게 데이터를 비교하게 된다.
			
	6. 논리 연산자
	7. 비트 연산자
	8. 3항연산자
	
















			
					